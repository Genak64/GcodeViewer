<!DOCTYPE html>
<html>
 
  <head>
  <%- include("partials/header.ejs") %>
  </head>
  
  <body>
  <div class="container mx-auto" style="max-width: 900px;">
  <%- include("partials/menu.ejs") %>
  
    <h1><%= title %></h1>
    <p>Добро пожаловать на страницу <%= title %>, визуализатор программ для лазерных станков написанных с использованием g-code.</p>
	<div class="container">
		<div class="row g-3 justify-content-around">
			<div class="col justify-content-center">
				<img src="files/pic-gcode.svg" />
			</div>
			<div class="col  align-self-center justify-content-center">
				<div class="p-2 border bg-light">
				<p>Для визуализации и просмотра в браузере, загрузите файл программы на сервер. Файл должен содержать корректную g-code программу и иметь расширение "nc".</p>
				</div>
			</div>
			<div class="col justify-content-center">
				<img src="files/pic-draw.svg" />
			</div>
			<div class="col align-self-center justify-content-end">
				<div class="p-2 border bg-light">
				<p>Для визуализации и просмотра в браузере, загрузите файл программы на сервер. Файл должен содержать корректную g-code программу и иметь расширение "nc".</p>
				</div>
			</div>
		</div>
	</div>
	
	<div class="container">
		<div class="row g-3 justify-content-around">
				<div class="col">
					<canvas id="canv" width="400" height="400" > </canvas>
				</div>
				
				<div class="col align-self-center">
					<div id="property" class="p-2 border bg-light"></div>
				</div>
		</div>	
		<div class="row p-3">
		<button id="inCollection" type="button" class="btn btn-primary" onclick="addInCollection()" >Добавить в коллекцию</button>
		
		</div>
	</div>
	
	<br>
	<form action="/upload" method="post" enctype="multipart/form-data">	
		<input class="form-control" type="file" name="filedata" id="file" onchange="uploadFile(this.files[0])"/>
	</form>
	
	
	<br>
	
	<div class="container">
		<div class="row p-3">
			<div class="p-3 border bg-light">
			<p>В будущем планируется добавление дополнительных возможностей:</p>
			<ul>
			<li>- масштабирование окна canvas под ширину браузера.</li>
			<li>- создание массивов и загрузка результата пользователю.</li>
			<li>- создание сохраненных коллекций на сервере.</li>
			<li>- авторизация пользователя.</li>
			</ul>
			</div>
		</div>
	</div>
	
	<br>
	
	<%- include("partials/footer.ejs") %>
	</div>
	
	<script  src="javascripts/drawToViewPort.js"></script>
	<script  src="javascripts/transformShape.js"></script>
	<script  src="javascripts/main.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/js/bootstrap.bundle.min.js" integrity="sha384-pprn3073KE6tl6bjs2QrFaJGz5/SUsLqktiwsUTF55Jfv3qYSDhgCecCxMW52nD2" crossorigin="anonymous"></script>	
	<script>

var canvas = document.querySelector('#canv');	
	canvas.style.display="none";

var property = document.querySelector('#property');
	property.style.display="none";

var inCollection = document.querySelector('#inCollection');
	inCollection.style.display="none";
	
var file = document.querySelector('#file');
var upload = document.querySelector('#upload');
var xhr = new XMLHttpRequest();
var fileNameCollection; 
 
// Нажмите, чтобы загрузить
function uploadFile(file) {
  var formData = new FormData();
  formData.append('filedata', file);
  xhr.onload = uploadSuccess;
  xhr.open('post', '/upload', true);
  xhr.send(formData);
};
 
// отслеживаем процесс отправки
  xhr.upload.onprogress = function(event) {
    console.log(`Отправлено ${event.loaded} из ${event.total}`);
  }; 
 
// Успешно загружено
function uploadSuccess(event) {
//  if (xhr.readyState === 4) {
//    console.log(xhr.responseText);
//  };
  
  
  if (xhr.status == 200) {
      console.log("Успех");
//	  console.log(xhr.responseText);
	 
//	  alert("файл загружен")
	  
//	  console.log(xhr.responseText);
	  
	  var orig=JSON.parse(xhr.responseText);
//	  console.log(orig);
		//	console.log(updateBorderShape(orig));
		//	oksp=transformShape.dublicate(orig,2,2,10);
		//	drawing.setView(1000,800);
		console.log("shape- ",orig[0].idleFeed);
		console.log(orig);
			drawing.paint(updateBorderShape(orig),'canv');
			canvas.style.display="block";
			
			fileNameCollection=orig[0].fname;
			
			
		//	drawing.paint(orig,'canv');
		
		ShowLengthAllPath(orig);
		var lengthPaths=ShowLengthSpecPath(orig);
		
		property.innerHTML="<p>Общая длина реза: "+ShowLengthAllPath(orig).toFixed(2)+" mm</p>";
		property.innerHTML+="<p>";
		
		for (index in lengthPaths){
			property.innerHTML+="Длина реза "+lengthPaths[index].pathLength.toFixed(2)+" mm <br>мощность "+lengthPaths[index].power/10+" %<br>скорость подачи "+lengthPaths[index].speed+" mm/min<br>время "+((lengthPaths[index].pathLength*60)/lengthPaths[index].speed).toFixed(2)+" sec<br><br>";
		}
		
		var allTime=0;
		for (index in lengthPaths){
			allTime=parseFloat(allTime)+parseFloat(parseFloat(lengthPaths[index].pathLength*60)/parseFloat(lengthPaths[index].speed));
		}
		var idleTime=orig[0].idleFeed*60/10000;
		var allTimeWithIdle=allTime+idleTime;
		
		property.innerHTML+="Холостой ход "+orig[0].idleFeed+" mm<br>";
		property.innerHTML+="Общее время реза "+allTimeWithIdle.toFixed(2)+" sec<br>";
		
		property.innerHTML+="</p>";
		
		property.style.display="block";

		inCollection.style.display="block";
		
	  };
};
	
function ShowLengthAllPath(shape){
	
	var len=0;
	
		for(path in shape){
		
			if (Number.isInteger(parseInt(path))) {

				len=len+shape[path].pathLength;
			}
		}
	return len;
	};

function ShowLengthSpecPath(shape){
	
	var len=[];
	var uniq=[];
	
	uniq=getPathListUniq(shape);
	
	for (index in uniq) {
	len.push({power:uniq[index].power,speed:uniq[index].speed, pathLength:0});
		for(path in shape){
		
			if (Number.isInteger(parseInt(path))) {
				if (len[index].power==shape[path].power&&len[index].speed==shape[path].speed) {
					len[index].pathLength=len[index].pathLength+shape[path].pathLength;
				}
			}
		}
	}
		return len;
	};


	function getPathListUniq (shape){
	
		var len=[];
		
		for(path in shape){
			if (Number.isInteger(parseInt(path))) {
			
				if (verifyPathToEnterArray(shape[path],len)) {
				 continue;
				} else {
				 len.push({power:shape[path].power,speed:shape[path].speed});
				};
			}
		}
		return len;
	};
	
	function verifyPathToEnterArray (path, arr){
		
		for (element in arr){
			
			if (arr[element].power==path.power&&arr[element].speed==path.speed) {
			 return true;
			}
		}
		return false;
	};

function addInCollection (){
	var xhr = new XMLHttpRequest();
	xhr.open('get', '/collection/add?fname='+fileNameCollection, true);
	xhr.send();
	
	console.log(fileNameCollection);

	inCollection.style.display="none";
}	
	
    </script>
	
  </body>
</html>
